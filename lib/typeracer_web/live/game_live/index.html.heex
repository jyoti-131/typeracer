<div class="fixed inset-0 bg-gradient-to-br from-slate-900 via-blue-900 to-indigo-950 p-4 flex flex-col overflow-auto">
  <!-- Header -->
  <div class="container mx-auto px-6 py-8">
    <div class="flex flex-col lg:flex-row lg:justify-between lg:items-center gap-6 mb-8">
      <div class="space-y-2">
        <h1 class="text-5xl font-extrabold bg-gradient-to-r from-blue-400 to-purple-400 bg-clip-text text-transparent">
          DAILY TYPING PRACTICE
        </h1>
        <p class="text-slate-300 text-lg font-medium">Build your typing skills one session at a time</p>
      </div>
      <button phx-click="view_profile" 
              class="group inline-flex items-center gap-3 bg-gradient-to-r from-purple-600 to-purple-700 hover:from-purple-700 hover:to-purple-800 text-white font-semibold py-3 px-6 rounded-xl shadow-lg hover:shadow-xl transform hover:-translate-y-0.5 transition-all duration-200">
        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
        </svg>
        Profile
      </button>
    </div>

    <%= if @practice_mode == :difficulty_select do %>
    <!-- Difficulty Selection Screen -->
    <div class="max-w-6xl mx-auto space-y-8">
      <!-- User Stats Quick View -->
      <%= if @user_profile do %>
        <div class="bg-white/5 backdrop-blur-lg rounded-3xl p-6 border border-white/10 shadow-2xl">
          <div class="flex flex-col lg:flex-row lg:justify-between lg:items-center gap-6">
            <div class="space-y-2">
              <span class="text-slate-300 font-medium">Welcome back!</span>
              <div class="text-xl font-bold text-white">Tests completed: <%= @user_profile.total_tests %></div>
            </div>
            <div class="flex gap-8">
              <div class="text-center">
                <div class="text-3xl font-bold bg-gradient-to-r from-amber-400 to-amber-300 bg-clip-text text-transparent">
                  <%= round(@user_profile.average_wpm) %>
                </div>
                <div class="text-amber-200 text-sm font-medium">Avg WPM</div>
              </div>
              <div class="text-center">
                <div class="text-3xl font-bold bg-gradient-to-r from-emerald-400 to-emerald-300 bg-clip-text text-transparent">
                  <%= round(@user_profile.average_accuracy) %>%
                </div>
                <div class="text-emerald-200 text-sm font-medium">Avg Acc</div>
              </div>
              <div class="text-center">
                <div class="text-3xl font-bold bg-gradient-to-r from-blue-400 to-blue-300 bg-clip-text text-transparent">
                  <%= @user_profile.best_wpm %>
                </div>
                <div class="text-blue-200 text-sm font-medium">Best WPM</div>
              </div>
            </div>
          </div>
        </div>
      <% end %>

      <!-- Difficulty Selection -->
      <div class="bg-white/5 backdrop-blur-lg rounded-3xl p-8 border border-white/10 shadow-2xl">
        <div class="text-center mb-8">
          <h2 class="text-3xl font-bold text-white mb-3">Choose Your Challenge Level</h2>
          <p class="text-slate-300 text-lg">Select a difficulty that matches your current skill level</p>
        </div>

        <div class="grid md:grid-cols-3 gap-8 max-w-4xl mx-auto">
          <!-- Beginner -->
          <div class="group bg-gradient-to-br from-emerald-500/10 to-emerald-600/10 backdrop-blur rounded-2xl p-8 border border-emerald-500/20 hover:border-emerald-500/40 transition-all duration-300 hover:scale-105 cursor-pointer"
               phx-click="select_difficulty" phx-value-difficulty="beginner">
            <div class="text-center space-y-4">
              <div class="w-16 h-16 bg-gradient-to-br from-emerald-500 to-emerald-600 rounded-2xl flex items-center justify-center mx-auto text-3xl shadow-lg">
                🌱
              </div>
              <h3 class="text-2xl font-bold text-emerald-400">Beginner</h3>
              <p class="text-slate-300 font-medium">Simple words and sentences</p>
              <div class="bg-emerald-500/10 rounded-xl p-4 border border-emerald-500/20">
                <div class="text-xl font-bold text-emerald-300">Target: 25 WPM</div>
                <div class="text-sm text-emerald-200 mt-1">Perfect for starting out</div>
              </div>
            </div>
          </div>

          <!-- Intermediate -->
          <div class="group bg-gradient-to-br from-amber-500/10 to-amber-600/10 backdrop-blur rounded-2xl p-8 border border-amber-500/20 hover:border-amber-500/40 transition-all duration-300 hover:scale-105 cursor-pointer"
               phx-click="select_difficulty" phx-value-difficulty="intermediate">
            <div class="text-center space-y-4">
              <div class="w-16 h-16 bg-gradient-to-br from-amber-500 to-amber-600 rounded-2xl flex items-center justify-center mx-auto text-3xl shadow-lg">
                ⚡
              </div>
              <h3 class="text-2xl font-bold text-amber-400">Intermediate</h3>
              <p class="text-slate-300 font-medium">Mixed sentences with punctuation</p>
              <div class="bg-amber-500/10 rounded-xl p-4 border border-amber-500/20">
                <div class="text-xl font-bold text-amber-300">Target: 40 WPM</div>
                <div class="text-sm text-amber-200 mt-1">Good for regular practice</div>
              </div>
            </div>
          </div>

          <!-- Advanced -->
          <div class="group bg-gradient-to-br from-red-500/10 to-red-600/10 backdrop-blur rounded-2xl p-8 border border-red-500/20 hover:border-red-500/40 transition-all duration-300 hover:scale-105 cursor-pointer"
               phx-click="select_difficulty" phx-value-difficulty="advanced">
            <div class="text-center space-y-4">
              <div class="w-16 h-16 bg-gradient-to-br from-red-500 to-red-600 rounded-2xl flex items-center justify-center mx-auto text-3xl shadow-lg">
                🔥
              </div>
              <h3 class="text-2xl font-bold text-red-400">Advanced</h3>
              <p class="text-slate-300 font-medium">Complex text with symbols & numbers</p>
              <div class="bg-red-500/10 rounded-xl p-4 border border-red-500/20">
                <div class="text-xl font-bold text-red-300">Target: 60 WPM</div>
                <div class="text-sm text-red-200 mt-1">For experienced typists</div>
              </div>
            </div>
          </div>
        </div>

        <div class="mt-8 text-center space-y-6">
          <div class="inline-flex items-center gap-2 bg-blue-500/10 rounded-xl px-6 py-3 border border-blue-500/20">
            <span class="text-2xl">💡</span>
            <p class="text-slate-300 font-medium">Tip: Start with a comfortable level and gradually increase difficulty</p>
          </div>
          
          <!-- Multiplayer Button -->
          <div>
  <button 
    phx-click="start_multiplayer" 
    class="group inline-flex items-center gap-3 bg-gradient-to-r from-purple-600 to-purple-700 hover:from-purple-700 hover:to-purple-800 text-white font-semibold py-4 px-8 rounded-xl shadow-lg hover:shadow-xl transform hover:-translate-y-0.5 transition-all duration-200 text-lg"
  >
    <span class="text-2xl group-hover:scale-110 transition-transform duration-200">🎮</span>
    Multiplayer Race
    <svg class="w-5 h-5 group-hover:translate-x-1 transition-transform duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6"></path>
    </svg>
  </button>
</div>
        </div>
      </div>
    </div>

    <% else %>
      <!-- Practice Screen -->
      <div class="max-w-7xl mx-auto space-y-8">
        <!-- Progress and Stats Bar -->
        <div class="bg-white/5 backdrop-blur-lg rounded-3xl p-6 border border-white/10 shadow-2xl">
          <div class="flex flex-col lg:flex-row lg:justify-between lg:items-center gap-6">
            <div class="flex items-center gap-4">
              <button phx-click="back_to_difficulty" 
                      class="group inline-flex items-center gap-2 bg-gradient-to-r from-slate-600 to-slate-700 hover:from-slate-700 hover:to-slate-800 text-white font-semibold py-3 px-6 rounded-xl shadow-lg hover:shadow-xl transform hover:-translate-y-0.5 transition-all duration-200">
                <svg class="w-5 h-5 group-hover:-translate-x-1 transition-transform duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
                </svg>
                Back
              </button>
              <div class="space-y-1">
                <div class="text-xl font-bold text-white"><%= get_difficulty_name(@selected_difficulty) %></div>
                <div class="text-slate-400 font-medium">Test #<%= @current_test_number %></div>
              </div>
            </div>
            
            <div class="grid grid-cols-4 gap-6">
              <div class="text-center">
                <div class="text-2xl font-bold bg-gradient-to-r from-amber-400 to-amber-300 bg-clip-text text-transparent">
                  <%= @wpm %>
                </div>
                <div class="text-amber-200 text-sm font-medium">WPM</div>
              </div>
              <div class="text-center">
                <div class="text-2xl font-bold bg-gradient-to-r from-emerald-400 to-emerald-300 bg-clip-text text-transparent">
                  <%= @accuracy %>%
                </div>
                <div class="text-emerald-200 text-sm font-medium">Accuracy</div>
              </div>
              <div class="text-center">
                <div class="text-2xl font-bold bg-gradient-to-r from-red-400 to-red-300 bg-clip-text text-transparent">
                  <%= @mistakes_count %>
                </div>
                <div class="text-red-200 text-sm font-medium">Mistakes</div>
              </div>
              <div class="text-center">
                <div class="text-2xl font-bold bg-gradient-to-r from-blue-400 to-blue-300 bg-clip-text text-transparent">
                  <%= format_time(@elapsed_time) %>
                </div>
                <div class="text-blue-200 text-sm font-medium">Time</div>
              </div>
            </div>
          </div>
        </div>

        <!-- Text Display - FIXED VERSION -->
        <div class="bg-white/5 backdrop-blur-lg rounded-3xl p-8 border border-white/10 shadow-2xl cursor-text relative" 
             id="text-display" 
             phx-hook="TypingHandler"
             phx-click="focus_input">

          <!-- Display the text with character states using new logic -->
          <div class="text-2xl leading-relaxed font-mono text-left select-none min-h-[120px] flex-wrap max-w-full break-words whitespace-normal">
            <%= for char_data <- @character_states do %>
              <span class={
                case char_data.state do
                  :correct -> "text-emerald-400 bg-emerald-500/20 rounded-sm px-0.5"
                  :incorrect -> "text-red-400 bg-red-500/30 rounded-sm px-0.5"
                  :current -> "text-white bg-blue-500 animate-pulse shadow-lg rounded-sm px-0.5"
                  :untyped -> "text-slate-400"
                end
              }><%= if char_data.character == " ", do: raw("&nbsp;"), else: char_data.character %></span>
            <% end %>
          </div>

          <!-- Hidden input for capturing keystrokes -->
          <%= if @practice_started and not @is_finished do %>
            <!-- Document-level keydown handler -->
            <div phx-window-keydown="keydown" 
                 phx-window-keyup="keyup"
                 class="hidden"></div>

            <!-- Fallback hidden input -->
            <input type="text" 
                   id="hidden-typing-input" 
                   phx-keydown="handle_keystroke"
                   phx-keyup="handle_keystroke"
                   class="absolute opacity-0 pointer-events-none" 
                   style="position: fixed; left: -9999px; top: -9999px; width: 1px; height: 1px;"
                   autocomplete="off" 
                   autocorrect="off" 
                   autocapitalize="off" 
                   spellcheck="false"
                   value="">
          <% end %>

          <!-- Progress indicator -->
          <%= if @practice_started and not @is_finished do %>
            <div class="mt-8 space-y-4">
              <div class="text-center">
                <div class="text-slate-300 font-medium mb-3">
                  Progress: <%= @current_position %>/<%= String.length(@current_text) %> characters
                </div>
                <div class="w-full bg-slate-700/50 rounded-full h-3 overflow-hidden border border-slate-600/50">
                  <% progress_percent = if String.length(@current_text) > 0, do: (@current_position / String.length(@current_text) * 100), else: 0 %>
                  <div class="bg-gradient-to-r from-blue-500 to-purple-500 h-3 rounded-full transition-all duration-300 shadow-lg" 
                       style={"width: #{progress_percent}%"}></div>
                </div>
              </div>
            </div>
          <% end %>
        </div>

        <%= if @is_finished do %>
          <div class="bg-white/5 backdrop-blur-lg rounded-3xl p-8 border border-white/10 shadow-2xl">
            <div class="text-center space-y-8">
              <div class="space-y-4">
                <div class="text-6xl">🎉</div>
                <h2 class="text-3xl font-bold text-white">Exercise Complete!</h2>
              </div>
              
              <!-- Performance Messages -->
              <div class="space-y-3">
                <div class="text-xl font-semibold bg-gradient-to-r from-amber-400 to-amber-300 bg-clip-text text-transparent">
                  <%= get_performance_message(@wpm, get_target_wpm(@selected_difficulty)) %>
                </div>
                <div class="text-lg font-semibold bg-gradient-to-r from-emerald-400 to-emerald-300 bg-clip-text text-transparent">
                  <%= get_accuracy_message(@accuracy) %>
                </div>
              </div>

              <!-- Results Summary -->
              <div class="bg-gradient-to-br from-slate-800/30 to-slate-900/30 backdrop-blur rounded-2xl p-8 max-w-2xl mx-auto border border-white/10">
                <div class="grid grid-cols-2 gap-8">
                  <div class="text-center space-y-2">
                    <div class="text-3xl font-bold bg-gradient-to-r from-amber-400 to-amber-300 bg-clip-text text-transparent">
                      <%= @wpm %>
                    </div>
                    <div class="text-amber-200 font-medium">Words Per Minute</div>
                    <div class="text-sm text-slate-400">Target: <%= get_target_wpm(@selected_difficulty) %></div>
                  </div>
                  <div class="text-center space-y-2">
                    <div class="text-3xl font-bold bg-gradient-to-r from-emerald-400 to-emerald-300 bg-clip-text text-transparent">
                      <%= @accuracy %>%
                    </div>
                    <div class="text-emerald-200 font-medium">Accuracy</div>
                    <div class="text-sm text-slate-400">Mistakes: <%= @mistakes_count %></div>
                  </div>
                  <div class="text-center space-y-2">
                    <div class="text-3xl font-bold bg-gradient-to-r from-blue-400 to-blue-300 bg-clip-text text-transparent">
                      <%= format_time(@elapsed_time) %>
                    </div>
                    <div class="text-blue-200 font-medium">Time Taken</div>
                  </div>
                  <div class="text-center space-y-2">
                    <div class="text-3xl font-bold bg-gradient-to-r from-purple-400 to-purple-300 bg-clip-text text-transparent">
                      <%= @total_keystrokes %>
                    </div>
                    <div class="text-purple-200 font-medium">Keystrokes</div>
                  </div>
                </div>
              </div>

              <!-- Action Buttons -->
              <div class="flex flex-wrap gap-4 justify-center">
                <button phx-click="next_exercise" 
                        class="group inline-flex items-center gap-3 bg-gradient-to-r from-emerald-600 to-emerald-700 hover:from-emerald-700 hover:to-emerald-800 text-white font-semibold py-3 px-6 rounded-xl shadow-lg hover:shadow-xl transform hover:-translate-y-0.5 transition-all duration-200">
                  <span class="text-xl">📝</span>
                  Next Exercise
                </button>
                <button phx-click="view_profile" 
                        class="group inline-flex items-center gap-3 bg-gradient-to-r from-purple-600 to-purple-700 hover:from-purple-700 hover:to-purple-800 text-white font-semibold py-3 px-6 rounded-xl shadow-lg hover:shadow-xl transform hover:-translate-y-0.5 transition-all duration-200">
                  <span class="text-xl">📊</span>
                  View Profile
                </button>
                <button phx-click="back_to_difficulty" 
                        class="group inline-flex items-center gap-3 bg-gradient-to-r from-slate-600 to-slate-700 hover:from-slate-700 hover:to-slate-800 text-white font-semibold py-3 px-6 rounded-xl shadow-lg hover:shadow-xl transform hover:-translate-y-0.5 transition-all duration-200">
                  <span class="text-xl">🎯</span>
                  Change Level
                </button>
              </div>
            </div>
          </div>
        <% end %>

        <!-- Virtual Keyboard (only show during practice) -->
        <%= if @practice_started and not @is_finished do %>
          <div class="bg-white/5 backdrop-blur-lg rounded-3xl p-8 border border-white/10 shadow-2xl">
            <div class="text-center mb-6 space-y-2">
              <h3 class="text-2xl font-bold text-white">Virtual Keyboard</h3>
              <div class="inline-flex items-center gap-2 bg-blue-500/10 rounded-xl px-4 py-2 border border-blue-500/20">
                <span class="text-slate-300 font-medium">Next key:</span>
                <span class="text-xl font-bold bg-gradient-to-r from-blue-400 to-blue-300 bg-clip-text text-transparent">
                  <%= if @current_char_to_type == " ", do: "SPACE", else: @current_char_to_type %>
                </span>
              </div>
            </div>
            
            <!-- Keyboard Layout -->
            <div class="max-w-4xl mx-auto space-y-3">
              <!-- Top Row: Numbers and symbols -->
              <div class="flex justify-center gap-2">
                <%= for key <- ["`", "1", "2", "3", "4", "5", "6", "7", "8", "9", "0", "-", "="] do %>
                  <div class={
                    "flex items-center justify-center w-12 h-12 rounded-xl text-sm font-mono border transition-all duration-200 #{
                      if key == @current_char_to_type do
                        "bg-gradient-to-br from-blue-500 to-blue-600 text-white border-blue-400 transform scale-110 shadow-xl animate-pulse"
                      else
                        "bg-slate-700/50 text-slate-300 border-slate-600/50 hover:bg-slate-600/50 backdrop-blur"
                      end
                    }"
                  }>
                    <%= key %>
                  </div>
                <% end %>
                <div class="flex items-center justify-center w-20 h-12 rounded-xl text-xs font-mono bg-slate-700/50 text-slate-300 border border-slate-600/50 ml-2 backdrop-blur">
                  Backspace
                </div>
              </div>

              <!-- Second Row: QWERTY top row -->
              <div class="flex justify-center gap-2">
                <div class="flex items-center justify-center w-16 h-12 rounded-xl text-xs font-mono bg-slate-700/50 text-slate-300 border border-slate-600/50 backdrop-blur">
                  Tab
                </div>
                <%= for key <- ["q", "w", "e", "r", "t", "y", "u", "i", "o", "p", "[", "]", "\\"] do %>
                  <div class={
                    "flex items-center justify-center w-12 h-12 rounded-xl text-sm font-mono border transition-all duration-200 #{
                      if String.downcase(key) == String.downcase(@current_char_to_type) do
                        "bg-gradient-to-br from-blue-500 to-blue-600 text-white border-blue-400 transform scale-110 shadow-xl animate-pulse"
                      else
                        "bg-slate-700/50 text-slate-300 border-slate-600/50 hover:bg-slate-600/50 backdrop-blur"
                      end
                    }"
                  }>
                    <%= String.upcase(key) %>
                  </div>
                <% end %>
              </div>

              <!-- Third Row: ASDF home row -->
              <div class="flex justify-center gap-2">
                <div class="flex items-center justify-center w-20 h-12 rounded-xl text-xs font-mono bg-slate-700/50 text-slate-300 border border-slate-600/50 backdrop-blur">
                  Caps Lock
                </div>
                <%= for key <- ["a", "s", "d", "f", "g", "h", "j", "k", "l", ";", "'"] do %>
                  <div class={
                    "flex items-center justify-center w-12 h-12 rounded-xl text-sm font-mono border transition-all duration-200 #{
                      if String.downcase(key) == String.downcase(@current_char_to_type) do
                        "bg-gradient-to-br from-blue-500 to-blue-600 text-white border-blue-400 transform scale-110 shadow-xl animate-pulse"
                      else
                        "bg-slate-700/50 text-slate-300 border-slate-600/50 hover:bg-slate-600/50 backdrop-blur"
                      end
                    }"
                  }>
                    <%= String.upcase(key) %>
                  </div>
                <% end %>
                <div class="flex items-center justify-center w-20 h-12 rounded-xl text-xs font-mono bg-slate-700/50 text-slate-300 border border-slate-600/50 ml-2 backdrop-blur">
                  Enter
                </div>
              </div>

              <!-- Fourth Row: ZXCV bottom row -->
              <div class="flex justify-center gap-2">
                <div class="flex items-center justify-center w-24 h-12 rounded-xl text-xs font-mono bg-slate-700/50 text-slate-300 border border-slate-600/50 backdrop-blur">
                  Shift
                </div>
                <%= for key <- ["z", "x", "c", "v", "b", "n", "m", ",", ".", "/"] do %>
                  <div class={
                    "flex items-center justify-center w-12 h-12 rounded-xl text-sm font-mono border transition-all duration-200 #{
                      if String.downcase(key) == String.downcase(@current_char_to_type) do
                        "bg-gradient-to-br from-blue-500 to-blue-600 text-white border-blue-400 transform scale-110 shadow-xl animate-pulse"
                      else
                        "bg-slate-700/50 text-slate-300 border-slate-600/50 hover:bg-slate-600/50 backdrop-blur"
                      end
                    }"
                  }>
                    <%= if key in [",", ".", "/"], do: key, else: String.upcase(key) %>
                  </div>
                <% end %>
                <div class="flex items-center justify-center w-24 h-12 rounded-xl text-xs font-mono bg-slate-700/50 text-slate-300 border border-slate-600/50 ml-2 backdrop-blur">
                  Shift
                </div>
              </div>

              <!-- Bottom Row: Space and modifiers -->
              <div class="flex justify-center gap-2">
                <div class="flex items-center justify-center w-16 h-12 rounded-xl text-xs font-mono bg-slate-700/50 text-slate-300 border border-slate-600/50 backdrop-blur">
                  Ctrl
                </div>
                <div class="flex items-center justify-center w-16 h-12 rounded-xl text-xs font-mono bg-slate-700/50 text-slate-300 border border-slate-600/50 backdrop-blur">
                  Alt
                </div>
                <div class={
                  "flex items-center justify-center w-80 h-12 rounded-xl text-sm font-mono border transition-all duration-200 #{
                    if @current_char_to_type == " " do
                      "bg-gradient-to-br from-blue-500 to-blue-600 text-white border-blue-400 transform scale-105 shadow-xl animate-pulse"
                    else
                      "bg-slate-700/50 text-slate-300 border-slate-600/50 hover:bg-slate-600/50 backdrop-blur"
                    end
                  }"
                }>
                  Space
                </div>
                <div class="flex items-center justify-center w-16 h-12 rounded-xl text-xs font-mono bg-slate-700/50 text-slate-300 border border-slate-600/50 backdrop-blur">
                  Alt
                </div>
                <div class="flex items-center justify-center w-16 h-12 rounded-xl text-xs font-mono bg-slate-700/50 text-slate-300 border border-slate-600/50 backdrop-blur">
                  Ctrl
                </div>
              </div>
            </div>

            <!-- Keyboard Stats -->
            <div class="mt-6 flex justify-center gap-6 text-sm">
              <div class="flex items-center gap-2">
                <div class="w-4 h-4 bg-gradient-to-br from-blue-500 to-blue-600 rounded border border-blue-400"></div>
                <span class="text-slate-300 font-medium">Next Key</span>
              </div>
              <div class="flex items-center gap-2">
                <div class="w-4 h-4 bg-gradient-to-br from-emerald-500 to-emerald-600 rounded border border-emerald-400"></div>
                <span class="text-slate-300 font-medium">Correct</span>
              </div>
              <div class="flex items-center gap-2">
                <div class="w-4 h-4 bg-gradient-to-br from-red-500 to-red-600 rounded border border-red-400"></div>
                <span class="text-slate-300 font-medium">Mistakes</span>
              </div>
            </div>
          </div>
        <% end %>
      </div>
    <% end %>

    <!-- Footer -->
    <div class="text-center mt-8 space-y-2">
      <p class="text-slate-300 font-medium">Practice daily to improve your typing skills!</p>
      <%= if @practice_mode != :difficulty_select do %>
        <div class="inline-flex items-center gap-2 bg-blue-500/10 rounded-xl px-4 py-2 border border-blue-500/20">
          <span class="text-lg">💡</span>
          <p class="text-slate-400 text-sm">Focus on accuracy first, then speed will follow naturally</p>
        </div>
      <% end %>
    </div>
  </div>
</div>

<style>
/* Enhanced transitions and animations */
.transition-all {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.group:hover .group-hover\:scale-110 {
  transform: scale(1.1);
}

.group:hover .group-hover\:-translate-x-1 {
  transform: translateX(-0.25rem);
}

/* Enhanced focus styles */
input:focus {
  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.3);
}

/* Backdrop blur support */
.backdrop-blur {
  backdrop-filter: blur(12px);
}

.backdrop-blur-lg {
  backdrop-filter: blur(16px);
}

/* Enhanced gradient text */
.bg-clip-text {
  -webkit-background-clip: text;
  background-clip: text;
}

/* Custom scrollbar for better aesthetics */
::-webkit-scrollbar {
  width: 8px;
}

::-webkit-scrollbar-track {
  background: rgba(15, 23, 42, 0.3);
  border-radius: 4px;
}

::-webkit-scrollbar-thumb {
  background: rgba(59, 130, 246, 0.5);
  border-radius: 4px;
}

::-webkit-scrollbar-thumb:hover {
  background: rgba(59, 130, 246, 0.7);
}

/* Loading states and micro-interactions */
@keyframes pulse {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: .5;
  }
}

.animate-pulse {
  animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

/* Enhanced button hover effects */
button:hover {
  transform: translateY(-1px);
}

button:active {
  transform: translateY(0);
}

/* Card hover effects */
.group:hover {
  box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.5);
}

/* Prevent text selection on UI elements */
button, .text-center > div {
  user-select: none;
}

/* Ensure font matches display text */
input {
  font-family: 'Courier New', Consolas, 'Liberation Mono', Menlo, Courier, monospace;
  line-height: 1.5;
}

/* Smooth transitions for state changes */
.transition-colors {
  transition: background-color 0.15s ease-in-out, border-color 0.15s ease-in-out;
}

/* Better focus indicators */
button:focus {
  outline: 2px solid #3b82f6;
  outline-offset: 2px;
}

/* Keyboard key hover effects */
.keyboard-key {
  transition: all 0.15s ease-in-out;
}

.keyboard-key:hover {
  transform: translateY(-1px);
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
}

/* Hide the hidden input completely */
#hidden-typing-input {
  position: absolute !important;
  left: -9999px !important;
  top: -9999px !important;
  width: 1px !important;
  height: 1px !important;
  opacity: 0 !important;
  pointer-events: none;
}

/* Responsive typography */
@media (max-width: 640px) {
  .text-5xl {
    font-size: 2.5rem;
    line-height: 1;
  }
  
  .text-4xl {
    font-size: 2rem;
    line-height: 1.1;
  }
  
  .text-3xl {
    font-size: 1.75rem;
    line-height: 1.2;
  }
  
  .keyboard-key {
    font-size: 0.75rem;
    width: 2rem;
    height: 2rem;
  }
}

/* Enhanced glass morphism effects */
.glass-card {
  background: rgba(255, 255, 255, 0.05);
  backdrop-filter: blur(16px);
  border: 1px solid rgba(255, 255, 255, 0.1);
  box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
}

/* Animated gradient backgrounds */
@keyframes gradient-shift {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

.animated-gradient {
  background-size: 200% 200%;
  animation: gradient-shift 6s ease infinite;
}

/* Enhanced pulse animation for current character */
@keyframes character-pulse {
  0%, 100% {
    box-shadow: 0 0 0 0 rgba(59, 130, 246, 0.7);
  }
  50% {
    box-shadow: 0 0 0 8px rgba(59, 130, 246, 0);
  }
}

.character-current {
  animation: character-pulse 1.5s infinite;
}

/* Progress bar animations */
.progress-bar {
  background: linear-gradient(90deg, #3b82f6, #8b5cf6, #06b6d4);
  background-size: 200% 100%;
  animation: progress-flow 3s ease-in-out infinite;
}

@keyframes progress-flow {
  0%, 100% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
}

/* CRITICAL FIX: Prevent space bar from scrolling during typing practice */
body.typing-practice-active {
  overflow: hidden;
}

/* Allow scrolling only when user manually scrolls */
.typing-container {
  height: 100vh;
  overflow-y: auto;
  scroll-behavior: smooth;
}

/* Prevent space key default behavior during typing */
.prevent-space-scroll {
  /* This class will be used by JavaScript to identify when to prevent space scrolling */
}
</style>

<!-- JavaScript Hook for Typing Handler - SUPER AGGRESSIVE SPACE BAR FIX -->
<script>
  window.Hooks = window.Hooks || {};
  
  window.Hooks.TypingHandler = {
    mounted() {
      console.log("TypingHandler mounted - Setting up space bar prevention");
      
      // Focus management
      this.focusInput = () => {
        const input = document.getElementById('hidden-typing-input');
        if (input) {
          input.focus();
        }
      };

      // Set up initial focus
      this.focusInput();
      
      // Track if we're in typing mode
      this.isTyping = false;
      
      // Check if practice is active by looking for typing elements
      this.checkTypingMode = () => {
        const textDisplay = document.getElementById('text-display');
        const hiddenInput = document.getElementById('hidden-typing-input');
        this.isTyping = textDisplay && hiddenInput;
        
        console.log("Typing mode:", this.isTyping);
        
        // Add or remove body class to help with styling
        if (this.isTyping) {
          document.body.classList.add('typing-practice-active');
          document.body.style.overflow = 'hidden';
        } else {
          document.body.classList.remove('typing-practice-active');
          document.body.style.overflow = '';
        }
      };
      
      // Initial check
      this.checkTypingMode();
      
      // SUPER AGGRESSIVE SPACE BAR PREVENTION
      this.handleKeyDown = (event) => {
        this.checkTypingMode();
        
        // BLOCK SPACE BAR COMPLETELY DURING TYPING
        if (this.isTyping) {
          if (event.keyCode === 32 || event.which === 32 || event.key === ' ' || event.code === 'Space') {
            console.log("BLOCKING SPACE BAR!");
            event.preventDefault();
            event.stopPropagation();
            event.stopImmediatePropagation();
            
            // Send to LiveView
            this.pushEvent("keydown", { key: ' ' });
            return false;
          }
          
          // Block other typing keys too
          if (!event.ctrlKey && !event.metaKey && !event.altKey) {
            if (event.key.length === 1 || event.key === 'Backspace') {
              event.preventDefault();
              event.stopPropagation();
              event.stopImmediatePropagation();
              
              this.pushEvent("keydown", { key: event.key });
              return false;
            }
          }
        }
        
        return true;
      };

      // Also block on keyup
      this.handleKeyUp = (event) => {
        if (this.isTyping && (event.keyCode === 32 || event.which === 32 || event.key === ' ' || event.code === 'Space')) {
          console.log("BLOCKING SPACE BAR ON KEYUP!");
          event.preventDefault();
          event.stopPropagation();
          event.stopImmediatePropagation();
          return false;
        }
      };

      // Block on keypress too (triple protection)
      this.handleKeyPress = (event) => {
        if (this.isTyping && (event.keyCode === 32 || event.which === 32 || event.key === ' ' || event.code === 'Space')) {
          console.log("BLOCKING SPACE BAR ON KEYPRESS!");
          event.preventDefault();
          event.stopPropagation();
          event.stopImmediatePropagation();
          return false;
        }
      };

      // Add ALL event listeners with capture and highest priority
      document.addEventListener('keydown', this.handleKeyDown, true);
      document.addEventListener('keyup', this.handleKeyUp, true);
      document.addEventListener('keypress', this.handleKeyPress, true);
      window.addEventListener('keydown', this.handleKeyDown, true);
      window.addEventListener('keyup', this.handleKeyUp, true);
      window.addEventListener('keypress', this.handleKeyPress, true);
      
      // Also override the space key specifically
      this.spaceBlocker = (e) => {
        if (this.isTyping && e.keyCode === 32) {
          console.log("SPACE BLOCKED BY SPECIFIC HANDLER!");
          e.preventDefault();
          e.stopPropagation();
          e.stopImmediatePropagation();
          return false;
        }
      };
      
      document.body.addEventListener('keydown', this.spaceBlocker, true);
      document.body.addEventListener('keyup', this.spaceBlocker, true);
      document.body.addEventListener('keypress', this.spaceBlocker, true);
      
      // Keep focus on typing area
      document.addEventListener('click', this.focusInput);
      this.el.addEventListener('click', this.focusInput);
      
      // Re-check typing mode when the page updates
      this.observer = new MutationObserver(() => {
        this.checkTypingMode();
      });
      
      this.observer.observe(document.body, {
        childList: true,
        subtree: true
      });
      
      // Disable space scrolling CSS
      const style = document.createElement('style');
      style.textContent = `
        body.typing-practice-active {
          overflow: hidden !important;
        }
        body.typing-practice-active * {
          overflow: visible !important;
        }
        .typing-practice-active {
          -webkit-user-select: none;
          -moz-user-select: none;
          -ms-user-select: none;
          user-select: none;
        }
      `;
      document.head.appendChild(style);
      this.injectedStyle = style;
    },

    updated() {
      // Re-check typing mode after LiveView updates
      this.checkTypingMode();
      this.focusInput();
    },

    destroyed() {
      console.log("TypingHandler destroyed - Cleaning up");
      
      // Clean up ALL event listeners
      if (this.handleKeyDown) {
        document.removeEventListener('keydown', this.handleKeyDown, true);
        window.removeEventListener('keydown', this.handleKeyDown, true);
        document.body.removeEventListener('keydown', this.spaceBlocker, true);
      }
      if (this.handleKeyUp) {
        document.removeEventListener('keyup', this.handleKeyUp, true);
        window.removeEventListener('keyup', this.handleKeyUp, true);
        document.body.removeEventListener('keyup', this.spaceBlocker, true);
      }
      if (this.handleKeyPress) {
        document.removeEventListener('keypress', this.handleKeyPress, true);
        window.removeEventListener('keypress', this.handleKeyPress, true);
        document.body.removeEventListener('keypress', this.spaceBlocker, true);
      }
      
      document.removeEventListener('click', this.focusInput);
      
      // Clean up observer
      if (this.observer) {
        this.observer.disconnect();
      }
      
      // Remove body class and restore overflow
      document.body.classList.remove('typing-practice-active');
      document.body.style.overflow = '';
      
      // Remove injected style
      if (this.injectedStyle) {
        this.injectedStyle.remove();
      }
    }
  };

  // GLOBAL SPACE BAR BLOCKER (BACKUP SYSTEM)
  window.globalSpaceBlocker = function(event) {
    const textDisplay = document.getElementById('text-display');
    const hiddenInput = document.getElementById('hidden-typing-input');
    const isTyping = textDisplay && hiddenInput;
    
    if (isTyping && (event.keyCode === 32 || event.which === 32 || event.key === ' ')) {
      console.log("GLOBAL SPACE BLOCKER ACTIVATED!");
      event.preventDefault();
      event.stopPropagation();
      event.stopImmediatePropagation();
      return false;
    }
  };

  // Add global blockers as backup
  document.addEventListener('keydown', window.globalSpaceBlocker, true);
  document.addEventListener('keyup', window.globalSpaceBlocker, true);
  document.addEventListener('keypress', window.globalSpaceBlocker, true);
</script>